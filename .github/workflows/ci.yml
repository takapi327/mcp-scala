# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-22.04]
        scala: [3.3.5, 3.6.4]
        java: [corretto@11, corretto@17, corretto@21]
        project: [mcpScalaJS, mcpScalaJVM, mcpScalaNative]
        exclude:
          - scala: 3.6.4
            java: corretto@17
          - scala: 3.6.4
            java: corretto@21
          - project: mcpScalaJS
            java: corretto@17
          - project: mcpScalaJS
            java: corretto@21
          - project: mcpScalaNative
            java: corretto@17
          - project: mcpScalaNative
            java: corretto@21
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (corretto@11)
        id: setup-java-corretto-11
        if: matrix.java == 'corretto@11'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@11' && steps.setup-java-corretto-11.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (corretto@21)
        id: setup-java-corretto-21
        if: matrix.java == 'corretto@21'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@21' && steps.setup-java-corretto-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Install brew formulae (ubuntu)
        if: (matrix.project == 'mcpScalaNative') && startsWith(matrix.os, 'ubuntu')
        run: /home/linuxbrew/.linuxbrew/bin/brew install s2n

      - name: Check that workflows are up to date
        run: sbt githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'corretto@11' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: scalaJSLink
        if: matrix.project == 'mcpScalaJS'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: nativeLink
        if: matrix.project == 'mcpScalaNative'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/nativeLink

      - name: Test
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'corretto@11' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'corretto@11' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        run: mkdir -p module/mcp-scala-server/.native/target module/mcp-scala-schema/.js/target module/mcp-scala-schema/.native/target module/mcp-scala-schema/.jvm/target module/mcp-scala-server/.jvm/target module/mcp-scala-server/.js/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        run: tar cf targets.tar module/mcp-scala-server/.native/target module/mcp-scala-schema/.js/target module/mcp-scala-schema/.native/target module/mcp-scala-schema/.jvm/target module/mcp-scala-server/.jvm/target module/mcp-scala-server/.js/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [corretto@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (corretto@11)
        id: setup-java-corretto-11
        if: matrix.java == 'corretto@11'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@11' && steps.setup-java-corretto-11.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (corretto@21)
        id: setup-java-corretto-21
        if: matrix.java == 'corretto@21'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@21' && steps.setup-java-corretto-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Download target directories (3.3.5, mcpScalaJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.3.5-mcpScalaJS

      - name: Inflate target directories (3.3.5, mcpScalaJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.3.5, mcpScalaJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.3.5-mcpScalaJVM

      - name: Inflate target directories (3.3.5, mcpScalaJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.3.5, mcpScalaNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.3.5-mcpScalaNative

      - name: Inflate target directories (3.3.5, mcpScalaNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.6.4, mcpScalaJS)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.6.4-mcpScalaJS

      - name: Inflate target directories (3.6.4, mcpScalaJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.6.4, mcpScalaJVM)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.6.4-mcpScalaJVM

      - name: Inflate target directories (3.6.4, mcpScalaJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.6.4, mcpScalaNative)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.6.4-mcpScalaNative

      - name: Inflate target directories (3.6.4, mcpScalaNative)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: echo $PGP_SECRET | base64 -d -i - | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: |
          echo "$PGP_SECRET" | base64 -d -i - > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
        run: sbt tlCiRelease

  dependency-submission:
    name: Submit Dependencies
    if: github.event.repository.fork == false && github.event_name != 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [corretto@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (corretto@11)
        id: setup-java-corretto-11
        if: matrix.java == 'corretto@11'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 11
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@11' && steps.setup-java-corretto-11.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (corretto@17)
        id: setup-java-corretto-17
        if: matrix.java == 'corretto@17'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@17' && steps.setup-java-corretto-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Setup Java (corretto@21)
        id: setup-java-corretto-21
        if: matrix.java == 'corretto@21'
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'corretto@21' && steps.setup-java-corretto-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Submit Dependencies
        uses: scalacenter/sbt-dependency-submission@v2
        with:
          modules-ignore: document-mcp-server_sjs1_3 mcp-scala-client_native0.4_3 ldbc-mcp-server_sjs1_3 document-mcp-server_3 document-mcp-server_native0.4_3 mcpscalajs_3 mcpscalajs_3 mcp-scala-client_sjs1_3 mcp-scala-client_3 mcpscalajvm_3 mcpscalajvm_3 mcpscalanative_3 mcpscalanative_3 ldbc-mcp-server_3 ldbc-mcp-server_native0.4_3
          configs-ignore: test scala-tool scala-doc-tool test-internal
